name: Python

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    name: Build and Test ORCA
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.10", "3.11"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Create and activate virtual environment (Linux/macOS)
        if: runner.os != 'Windows'
        run: |
          python -m venv orca-env
          echo "VIRTUAL_ENV=$PWD/orca-env" >> $GITHUB_ENV
          echo "$PWD/orca-env/bin" >> $GITHUB_PATH
        shell: bash

      - name: Create and activate virtual environment (Windows)
        if: runner.os == 'Windows'
        run: |
          python -m venv orca-env
          echo "VIRTUAL_ENV=$PWD/orca-env" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "$PWD/orca-env/Scripts" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        shell: pwsh

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install maturin pytest rdkit

      - name: Build ORCA (Linux/macOS)
        if: runner.os != 'Windows'
        run: maturin develop

      - name: Build ORCA (Windows)
        if: runner.os == 'Windows'
        run: |
          maturin develop --interpreter=orca-env\Scripts\python.exe

      - name: Run tests
        run: pytest python/tests
